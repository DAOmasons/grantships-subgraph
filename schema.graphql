type Project @entity {
  id: Bytes!
  profileId: Bytes! # bytes32
  nonce: BigInt! # uint256
  name: String! # string
  metadata: RawMetadata # ProjectMetadata
  owner: Bytes! # address
  anchor: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  members: ProfileMemberGroup
}

# type ProjectMetadata @entity(immutable: true) {
#   id: String!
#   name: String
#   description: String
#   avatarHash_IPFS: String
#   email: String
#   x: String
#   github: String
#   discord: String
#   telegram: String
#   website: String
# }

type GrantShip @entity {
  # Registry => ProfileCreated
  id: Bytes!
  profileId: Bytes! # bytes32
  nonce: BigInt! # uint256
  name: String! # string
  profileMetadata: RawMetadata! # ShipProfileMetadata
  owner: Bytes! # address
  anchor: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  status: Int!
  # Registry => Role Granted
  alloProfileMembers: ProfileMemberGroup
  # Game Manager => Registered
  shipApplicationBytesData: Bytes
  hasSubmittedApplication: Boolean
  # Game Manager => RecipientRejected/Accepted
  isApproved: Boolean
  applicationReviewReason: RawMetadata
  # Game Manager => ShipLaunched
  poolId: BigInt
  shipContractAddress: Bytes # address
  shipLaunched: Boolean
  #

  # Game Manager => Allocated
  isAllocated: Boolean
  allocatedAmount: BigInt
  # Game Manager => Distributed
  isDistributed: Boolean
  distributedAmount: BigInt
}

type GrantShipLookup @entity {
  id: Bytes! # anchor
  anchorAddress: Bytes! # address
}

type PoolIdLookup @entity {
  id: ID! # profileId
  entityId: Bytes! # address
}

type GameManager @entity {
  # GameManager => GameManagerInitialized
  id: Bytes!
  gameFacilitatorId: BigInt!
  rootAccount: Bytes! # address
  tokenAddress: Bytes! # address
  currentRoundId: BigInt!
  # GameManager => CreateRound
  currentRound: GameRound
  poolFunds: BigInt!
}

type GameRound @entity {
  id: ID!
  startTime: BigInt!
  endTime: BigInt!
  totalRoundAmount: BigInt!
  gameStatus: Int!
  ships: [GrantShip!]!
}

# type ShipProfileMetadata @entity(immutable: true) {
#   id: String!
#   name: String
#   mission: String
#   avatarHash_IPFS: String
#   email: String
#   x: String
#   github: String
#   discord: String
#   telegram: String
#   website: String
# }

type ProfileMemberGroup @entity {
  id: Bytes!
  addresses: [Bytes!]
}

type Transaction @entity {
  id: ID!
  blockNumber: BigInt!
  sender: Bytes! # address
  txHash: Bytes!
}

type RawMetadata @entity {
  id: String!
  protocol: BigInt!
  pointer: String!
}

type Log @entity {
  id: ID!
  message: String!
  description: String
  type: String!
}
