type Project @entity {
  id: Bytes!
  profileId: Bytes! # bytes32
  status: Int! # uint8
  nonce: BigInt! # uint256
  name: String! # string
  metadata: RawMetadata! # ProjectMetadata
  owner: Bytes! # address
  anchor: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  grants: [Grant!]! @derivedFrom(field: "projectId")
  members: ProfileMemberGroup
}

type FeedItem @entity {
  # Derived from "feedItem" + txHash + index of feed Items created in that call
  id: ID!
  timestamp: BigInt
  content: String!
  sender: Bytes! # address
  tag: String!
  subjectMetadataPointer: String!
  subjectId: ID!
  objectId: ID
  subject: FeedItemEntity!
  object: FeedItemEntity
  embed: FeedItemEmbed
  details: String
}

type FeedItemEntity @entity {
  id: ID!
  name: String!
  type: String!
}

type FeedItemEmbed @entity {
  id: ID!
  key: String
  pointer: String
  protocol: BigInt
  content: String
}

type GrantShip @entity {
  # Registry => ProfileCreated
  id: Bytes!
  profileId: Bytes! # bytes32
  nonce: BigInt! # uint256
  name: String! # string
  profileMetadata: RawMetadata! # ShipProfileMetadata
  owner: Bytes! # address
  anchor: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  status: Int!
  poolFunded: Boolean!
  balance: BigInt!
  grants: [Grant!]! @derivedFrom(field: "shipId")
  # Registry => Role Granted
  alloProfileMembers: ProfileMemberGroup
  # Game Manager => Registered
  shipApplicationBytesData: Bytes
  applicationSubmittedTime: BigInt
  isAwaitingApproval: Boolean
  hasSubmittedApplication: Boolean
  # Game Manager => RecipientRejected/Accepted
  isApproved: Boolean
  approvedTime: BigInt
  isRejected: Boolean
  rejectedTime: BigInt
  applicationReviewReason: RawMetadata
  # Game Manager => ShipLaunched
  poolId: BigInt
  hatId: BigInt
  shipContractAddress: Bytes # address
  shipLaunched: Boolean
  poolActive: Boolean
  # Game Manager => Allocated
  isAllocated: Boolean
  allocatedAmount: BigInt
  # Game Manager => Distributed
  isDistributed: Boolean
  distributedAmount: BigInt
}

type PoolIdLookup @entity {
  id: ID! # profileId
  entityId: Bytes! # address
}

type GameManager @entity {
  # GameManager => GameManagerInitialized
  id: Bytes!
  poolId: BigInt!
  gameFacilitatorId: BigInt!
  rootAccount: Bytes! # address
  tokenAddress: Bytes! # address
  currentRoundId: BigInt!
  # GameManager => CreateRound
  currentRound: GameRound
  poolFunds: BigInt!
  # GameManager => GameActive
}

type GameRound @entity {
  id: ID!
  startTime: BigInt!
  endTime: BigInt!
  totalRoundAmount: BigInt!
  totalAllocatedAmount: BigInt!
  totalDistributedAmount: BigInt!
  gameStatus: Int!
  ships: [GrantShip!]!
  isGameActive: Boolean!
  realStartTime: BigInt
  realEndTime: BigInt
}

type Grant @entity {
  id: ID!
  projectId: Project! # bytes32
  shipId: GrantShip! # Address
  lastUpdated: BigInt!
  grantStatus: Int!
  grantApplicationBytes: Bytes!
  milestoneReviewStatus: Int!
  upcomingMilestone: BigInt
  milestonesAmount: BigInt
  milestones: [Milestone!]
  shipApprovalReason: RawMetadata
}

type Milestone @entity {
  id: ID!
  amountPercentage: Bytes! # bytes32
  mmetadata: BigInt!
  amount: BigInt!
  status: Int!
  lastUpdated: BigInt!
}

type ProfileMemberGroup @entity {
  id: Bytes!
  addresses: [Bytes!]
}

type Transaction @entity {
  id: ID!
  blockNumber: BigInt!
  sender: Bytes! # address
  txHash: Bytes!
}

type RawMetadata @entity {
  id: String!
  protocol: BigInt!
  pointer: String!
}

type Log @entity {
  id: ID!
  message: String!
  description: String
  type: String!
}
