// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class Allocated extends ethereum.Event {
  get params(): Allocated__Params {
    return new Allocated__Params(this);
  }
}

export class Allocated__Params {
  _event: Allocated;

  constructor(event: Allocated) {
    this._event = event;
  }

  get recipientId(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get token(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class Distributed extends ethereum.Event {
  get params(): Distributed__Params {
    return new Distributed__Params(this);
  }
}

export class Distributed__Params {
  _event: Distributed;

  constructor(event: Distributed) {
    this._event = event;
  }

  get recipientId(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get recipientAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class GameActive extends ethereum.Event {
  get params(): GameActive__Params {
    return new GameActive__Params(this);
  }
}

export class GameActive__Params {
  _event: GameActive;

  constructor(event: GameActive) {
    this._event = event;
  }

  get active(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }

  get gameIndex(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class GameManagerInitialized extends ethereum.Event {
  get params(): GameManagerInitialized__Params {
    return new GameManagerInitialized__Params(this);
  }
}

export class GameManagerInitialized__Params {
  _event: GameManagerInitialized;

  constructor(event: GameManagerInitialized) {
    this._event = event;
  }

  get gameFacilitatorId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get hatsAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get rootAccount(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get token(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get poolId(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class GameRoundTimesCreated extends ethereum.Event {
  get params(): GameRoundTimesCreated__Params {
    return new GameRoundTimesCreated__Params(this);
  }
}

export class GameRoundTimesCreated__Params {
  _event: GameRoundTimesCreated;

  constructor(event: GameRoundTimesCreated) {
    this._event = event;
  }

  get gameRoundIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get startTime(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get poolId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get data(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class PoolActive extends ethereum.Event {
  get params(): PoolActive__Params {
    return new PoolActive__Params(this);
  }
}

export class PoolActive__Params {
  _event: PoolActive;

  constructor(event: PoolActive) {
    this._event = event;
  }

  get active(): boolean {
    return this._event.parameters[0].value.toBoolean();
  }
}

export class RecipientAccepted extends ethereum.Event {
  get params(): RecipientAccepted__Params {
    return new RecipientAccepted__Params(this);
  }
}

export class RecipientAccepted__Params {
  _event: RecipientAccepted;

  constructor(event: RecipientAccepted) {
    this._event = event;
  }

  get recipientAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get reason(): RecipientAcceptedReasonStruct {
    return changetype<RecipientAcceptedReasonStruct>(
      this._event.parameters[1].value.toTuple(),
    );
  }
}

export class RecipientAcceptedReasonStruct extends ethereum.Tuple {
  get protocol(): BigInt {
    return this[0].toBigInt();
  }

  get pointer(): string {
    return this[1].toString();
  }
}

export class RecipientRejected extends ethereum.Event {
  get params(): RecipientRejected__Params {
    return new RecipientRejected__Params(this);
  }
}

export class RecipientRejected__Params {
  _event: RecipientRejected;

  constructor(event: RecipientRejected) {
    this._event = event;
  }

  get recipientAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get reason(): RecipientRejectedReasonStruct {
    return changetype<RecipientRejectedReasonStruct>(
      this._event.parameters[1].value.toTuple(),
    );
  }
}

export class RecipientRejectedReasonStruct extends ethereum.Tuple {
  get protocol(): BigInt {
    return this[0].toBigInt();
  }

  get pointer(): string {
    return this[1].toString();
  }
}

export class Registered extends ethereum.Event {
  get params(): Registered__Params {
    return new Registered__Params(this);
  }
}

export class Registered__Params {
  _event: Registered;

  constructor(event: Registered) {
    this._event = event;
  }

  get recipientId(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get data(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoundCreated extends ethereum.Event {
  get params(): RoundCreated__Params {
    return new RoundCreated__Params(this);
  }
}

export class RoundCreated__Params {
  _event: RoundCreated;

  constructor(event: RoundCreated) {
    this._event = event;
  }

  get gameIndex(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get totalRoundAmount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ShipLaunched extends ethereum.Event {
  get params(): ShipLaunched__Params {
    return new ShipLaunched__Params(this);
  }
}

export class ShipLaunched__Params {
  _event: ShipLaunched;

  constructor(event: ShipLaunched) {
    this._event = event;
  }

  get shipAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get shipPoolId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get recipientId(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get shipName(): string {
    return this._event.parameters[3].value.toString();
  }

  get metadata(): ShipLaunchedMetadataStruct {
    return changetype<ShipLaunchedMetadataStruct>(
      this._event.parameters[4].value.toTuple(),
    );
  }
}

export class ShipLaunchedMetadataStruct extends ethereum.Tuple {
  get protocol(): BigInt {
    return this[0].toBigInt();
  }

  get pointer(): string {
    return this[1].toString();
  }
}

export class UpdatePosted extends ethereum.Event {
  get params(): UpdatePosted__Params {
    return new UpdatePosted__Params(this);
  }
}

export class UpdatePosted__Params {
  _event: UpdatePosted;

  constructor(event: UpdatePosted) {
    this._event = event;
  }

  get tag(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get role(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get recipientId(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get content(): UpdatePostedContentStruct {
    return changetype<UpdatePostedContentStruct>(
      this._event.parameters[3].value.toTuple(),
    );
  }
}

export class UpdatePostedContentStruct extends ethereum.Tuple {
  get protocol(): BigInt {
    return this[0].toBigInt();
  }

  get pointer(): string {
    return this[1].toString();
  }
}

export class GameManager__gameRoundsResult {
  value0: BigInt;
  value1: BigInt;
  value2: BigInt;
  value3: i32;

  constructor(value0: BigInt, value1: BigInt, value2: BigInt, value3: i32) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set(
      "value3",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value3)),
    );
    return map;
  }

  getStartTime(): BigInt {
    return this.value0;
  }

  getEndTime(): BigInt {
    return this.value1;
  }

  getTotalRoundAmount(): BigInt {
    return this.value2;
  }

  getStatus(): i32 {
    return this.value3;
  }
}

export class GameManager__getGameRoundResultValue0Struct extends ethereum.Tuple {
  get startTime(): BigInt {
    return this[0].toBigInt();
  }

  get endTime(): BigInt {
    return this[1].toBigInt();
  }

  get totalRoundAmount(): BigInt {
    return this[2].toBigInt();
  }

  get status(): i32 {
    return this[3].toI32();
  }

  get ships(): Array<Address> {
    return this[4].toAddressArray();
  }
}

export class GameManager__getPayoutsResultValue0Struct extends ethereum.Tuple {
  get recipientAddress(): Address {
    return this[0].toAddress();
  }

  get amount(): BigInt {
    return this[1].toBigInt();
  }
}

export class GameManager__getRecipientResultValue0Struct extends ethereum.Tuple {
  get recipientAddress(): Address {
    return this[0].toAddress();
  }

  get profileId(): Bytes {
    return this[1].toBytes();
  }

  get shipName(): string {
    return this[2].toString();
  }

  get shipAddress(): Address {
    return this[3].toAddress();
  }

  get shipPoolId(): BigInt {
    return this[4].toBigInt();
  }

  get grantAmount(): BigInt {
    return this[5].toBigInt();
  }

  get totalAmountRecieved(): BigInt {
    return this[6].toBigInt();
  }

  get metadata(): GameManager__getRecipientResultValue0MetadataStruct {
    return changetype<GameManager__getRecipientResultValue0MetadataStruct>(
      this[7].toTuple(),
    );
  }

  get status(): i32 {
    return this[8].toI32();
  }
}

export class GameManager__getRecipientResultValue0MetadataStruct extends ethereum.Tuple {
  get protocol(): BigInt {
    return this[0].toBigInt();
  }

  get pointer(): string {
    return this[1].toString();
  }
}

export class GameManager__recipientsResultMetadataStruct extends ethereum.Tuple {
  get protocol(): BigInt {
    return this[0].toBigInt();
  }

  get pointer(): string {
    return this[1].toString();
  }
}

export class GameManager__recipientsResult {
  value0: Address;
  value1: Bytes;
  value2: string;
  value3: Address;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: GameManager__recipientsResultMetadataStruct;
  value8: i32;

  constructor(
    value0: Address,
    value1: Bytes,
    value2: string,
    value3: Address,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: GameManager__recipientsResultMetadataStruct,
    value8: i32,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
    this.value8 = value8;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromFixedBytes(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromTuple(this.value7));
    map.set(
      "value8",
      ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(this.value8)),
    );
    return map;
  }

  getRecipientAddress(): Address {
    return this.value0;
  }

  getProfileId(): Bytes {
    return this.value1;
  }

  getShipName(): string {
    return this.value2;
  }

  getShipAddress(): Address {
    return this.value3;
  }

  getShipPoolId(): BigInt {
    return this.value4;
  }

  getGrantAmount(): BigInt {
    return this.value5;
  }

  getTotalAmountRecieved(): BigInt {
    return this.value6;
  }

  getMetadata(): GameManager__recipientsResultMetadataStruct {
    return this.value7;
  }

  getStatus(): i32 {
    return this.value8;
  }
}

export class GameManager__reviewRecipientInput_shipInitDataStruct extends ethereum.Tuple {
  get registryGating(): boolean {
    return this[0].toBoolean();
  }

  get metadataRequired(): boolean {
    return this[1].toBoolean();
  }

  get grantAmountRequired(): boolean {
    return this[2].toBoolean();
  }

  get shipName(): string {
    return this[3].toString();
  }

  get shipMetadata(): GameManager__reviewRecipientInput_shipInitDataShipMetadataStruct {
    return changetype<GameManager__reviewRecipientInput_shipInitDataShipMetadataStruct>(
      this[4].toTuple(),
    );
  }

  get recipientId(): Address {
    return this[5].toAddress();
  }

  get operatorHatId(): BigInt {
    return this[6].toBigInt();
  }

  get facilitatorHatId(): BigInt {
    return this[7].toBigInt();
  }
}

export class GameManager__reviewRecipientInput_shipInitDataShipMetadataStruct extends ethereum.Tuple {
  get protocol(): BigInt {
    return this[0].toBigInt();
  }

  get pointer(): string {
    return this[1].toString();
  }
}

export class GameManager__reviewRecipientInput_reasonStruct extends ethereum.Tuple {
  get protocol(): BigInt {
    return this[0].toBigInt();
  }

  get pointer(): string {
    return this[1].toString();
  }
}

export class GameManager extends ethereum.SmartContract {
  static bind(address: Address): GameManager {
    return new GameManager("GameManager", address);
  }

  NATIVE(): Address {
    let result = super.call("NATIVE", "NATIVE():(address)", []);

    return result[0].toAddress();
  }

  try_NATIVE(): ethereum.CallResult<Address> {
    let result = super.tryCall("NATIVE", "NATIVE():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  createRound(_totalRoundAmount: BigInt): BigInt {
    let result = super.call("createRound", "createRound(uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_totalRoundAmount),
    ]);

    return result[0].toBigInt();
  }

  try_createRound(_totalRoundAmount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "createRound",
      "createRound(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_totalRoundAmount)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  currentRoundIndex(): BigInt {
    let result = super.call(
      "currentRoundIndex",
      "currentRoundIndex():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_currentRoundIndex(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "currentRoundIndex",
      "currentRoundIndex():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  gameFacilitatorHatId(): BigInt {
    let result = super.call(
      "gameFacilitatorHatId",
      "gameFacilitatorHatId():(uint256)",
      [],
    );

    return result[0].toBigInt();
  }

  try_gameFacilitatorHatId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "gameFacilitatorHatId",
      "gameFacilitatorHatId():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  gameRounds(param0: BigInt): GameManager__gameRoundsResult {
    let result = super.call(
      "gameRounds",
      "gameRounds(uint256):(uint256,uint256,uint256,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );

    return new GameManager__gameRoundsResult(
      result[0].toBigInt(),
      result[1].toBigInt(),
      result[2].toBigInt(),
      result[3].toI32(),
    );
  }

  try_gameRounds(
    param0: BigInt,
  ): ethereum.CallResult<GameManager__gameRoundsResult> {
    let result = super.tryCall(
      "gameRounds",
      "gameRounds(uint256):(uint256,uint256,uint256,uint8)",
      [ethereum.Value.fromUnsignedBigInt(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GameManager__gameRoundsResult(
        value[0].toBigInt(),
        value[1].toBigInt(),
        value[2].toBigInt(),
        value[3].toI32(),
      ),
    );
  }

  getAllo(): Address {
    let result = super.call("getAllo", "getAllo():(address)", []);

    return result[0].toAddress();
  }

  try_getAllo(): ethereum.CallResult<Address> {
    let result = super.tryCall("getAllo", "getAllo():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getGameRound(
    _gameRoundIndex: BigInt,
  ): GameManager__getGameRoundResultValue0Struct {
    let result = super.call(
      "getGameRound",
      "getGameRound(uint256):((uint256,uint256,uint256,uint8,address[]))",
      [ethereum.Value.fromUnsignedBigInt(_gameRoundIndex)],
    );

    return changetype<GameManager__getGameRoundResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getGameRound(
    _gameRoundIndex: BigInt,
  ): ethereum.CallResult<GameManager__getGameRoundResultValue0Struct> {
    let result = super.tryCall(
      "getGameRound",
      "getGameRound(uint256):((uint256,uint256,uint256,uint8,address[]))",
      [ethereum.Value.fromUnsignedBigInt(_gameRoundIndex)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<GameManager__getGameRoundResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  getHatsAddress(): Address {
    let result = super.call("getHatsAddress", "getHatsAddress():(address)", []);

    return result[0].toAddress();
  }

  try_getHatsAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getHatsAddress",
      "getHatsAddress():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getPayouts(
    _recipientIds: Array<Address>,
    _data: Array<Bytes>,
  ): Array<GameManager__getPayoutsResultValue0Struct> {
    let result = super.call(
      "getPayouts",
      "getPayouts(address[],bytes[]):((address,uint256)[])",
      [
        ethereum.Value.fromAddressArray(_recipientIds),
        ethereum.Value.fromBytesArray(_data),
      ],
    );

    return result[0].toTupleArray<GameManager__getPayoutsResultValue0Struct>();
  }

  try_getPayouts(
    _recipientIds: Array<Address>,
    _data: Array<Bytes>,
  ): ethereum.CallResult<Array<GameManager__getPayoutsResultValue0Struct>> {
    let result = super.tryCall(
      "getPayouts",
      "getPayouts(address[],bytes[]):((address,uint256)[])",
      [
        ethereum.Value.fromAddressArray(_recipientIds),
        ethereum.Value.fromBytesArray(_data),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<GameManager__getPayoutsResultValue0Struct>(),
    );
  }

  getPoolAmount(): BigInt {
    let result = super.call("getPoolAmount", "getPoolAmount():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getPoolAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPoolAmount",
      "getPoolAmount():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getPoolId(): BigInt {
    let result = super.call("getPoolId", "getPoolId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getPoolId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getPoolId", "getPoolId():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRecipient(
    _recipientAddress: Address,
  ): GameManager__getRecipientResultValue0Struct {
    let result = super.call(
      "getRecipient",
      "getRecipient(address):((address,bytes32,string,address,uint256,uint256,uint256,(uint256,string),uint8))",
      [ethereum.Value.fromAddress(_recipientAddress)],
    );

    return changetype<GameManager__getRecipientResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getRecipient(
    _recipientAddress: Address,
  ): ethereum.CallResult<GameManager__getRecipientResultValue0Struct> {
    let result = super.tryCall(
      "getRecipient",
      "getRecipient(address):((address,bytes32,string,address,uint256,uint256,uint256,(uint256,string),uint8))",
      [ethereum.Value.fromAddress(_recipientAddress)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<GameManager__getRecipientResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  getRecipientStatus(_recipientId: Address): i32 {
    let result = super.call(
      "getRecipientStatus",
      "getRecipientStatus(address):(uint8)",
      [ethereum.Value.fromAddress(_recipientId)],
    );

    return result[0].toI32();
  }

  try_getRecipientStatus(_recipientId: Address): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getRecipientStatus",
      "getRecipientStatus(address):(uint8)",
      [ethereum.Value.fromAddress(_recipientId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  getShipAddress(_recipientAddress: Address): Address {
    let result = super.call(
      "getShipAddress",
      "getShipAddress(address):(address)",
      [ethereum.Value.fromAddress(_recipientAddress)],
    );

    return result[0].toAddress();
  }

  try_getShipAddress(_recipientAddress: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getShipAddress",
      "getShipAddress(address):(address)",
      [ethereum.Value.fromAddress(_recipientAddress)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getStrategyId(): Bytes {
    let result = super.call("getStrategyId", "getStrategyId():(bytes32)", []);

    return result[0].toBytes();
  }

  try_getStrategyId(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getStrategyId",
      "getStrategyId():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  isGameFacilitator(_address: Address): boolean {
    let result = super.call(
      "isGameFacilitator",
      "isGameFacilitator(address):(bool)",
      [ethereum.Value.fromAddress(_address)],
    );

    return result[0].toBoolean();
  }

  try_isGameFacilitator(_address: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isGameFacilitator",
      "isGameFacilitator(address):(bool)",
      [ethereum.Value.fromAddress(_address)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isPoolActive(): boolean {
    let result = super.call("isPoolActive", "isPoolActive():(bool)", []);

    return result[0].toBoolean();
  }

  try_isPoolActive(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPoolActive", "isPoolActive():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isValidAllocator(_allocator: Address): boolean {
    let result = super.call(
      "isValidAllocator",
      "isValidAllocator(address):(bool)",
      [ethereum.Value.fromAddress(_allocator)],
    );

    return result[0].toBoolean();
  }

  try_isValidAllocator(_allocator: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isValidAllocator",
      "isValidAllocator(address):(bool)",
      [ethereum.Value.fromAddress(_allocator)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  recipients(param0: Address): GameManager__recipientsResult {
    let result = super.call(
      "recipients",
      "recipients(address):(address,bytes32,string,address,uint256,uint256,uint256,(uint256,string),uint8)",
      [ethereum.Value.fromAddress(param0)],
    );

    return new GameManager__recipientsResult(
      result[0].toAddress(),
      result[1].toBytes(),
      result[2].toString(),
      result[3].toAddress(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      changetype<GameManager__recipientsResultMetadataStruct>(
        result[7].toTuple(),
      ),
      result[8].toI32(),
    );
  }

  try_recipients(
    param0: Address,
  ): ethereum.CallResult<GameManager__recipientsResult> {
    let result = super.tryCall(
      "recipients",
      "recipients(address):(address,bytes32,string,address,uint256,uint256,uint256,(uint256,string),uint8)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new GameManager__recipientsResult(
        value[0].toAddress(),
        value[1].toBytes(),
        value[2].toString(),
        value[3].toAddress(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        changetype<GameManager__recipientsResultMetadataStruct>(
          value[7].toTuple(),
        ),
        value[8].toI32(),
      ),
    );
  }

  reviewRecipient(
    _recipientAddress: Address,
    _approvalFlag: i32,
    _shipInitData: GameManager__reviewRecipientInput_shipInitDataStruct,
    _shipFactoryAddress: Address,
    _reason: GameManager__reviewRecipientInput_reasonStruct,
  ): Address {
    let result = super.call(
      "reviewRecipient",
      "reviewRecipient(address,uint8,(bool,bool,bool,string,(uint256,string),address,uint256,uint256),address,(uint256,string)):(address)",
      [
        ethereum.Value.fromAddress(_recipientAddress),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_approvalFlag)),
        ethereum.Value.fromTuple(_shipInitData),
        ethereum.Value.fromAddress(_shipFactoryAddress),
        ethereum.Value.fromTuple(_reason),
      ],
    );

    return result[0].toAddress();
  }

  try_reviewRecipient(
    _recipientAddress: Address,
    _approvalFlag: i32,
    _shipInitData: GameManager__reviewRecipientInput_shipInitDataStruct,
    _shipFactoryAddress: Address,
    _reason: GameManager__reviewRecipientInput_reasonStruct,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "reviewRecipient",
      "reviewRecipient(address,uint8,(bool,bool,bool,string,(uint256,string),address,uint256,uint256),address,(uint256,string)):(address)",
      [
        ethereum.Value.fromAddress(_recipientAddress),
        ethereum.Value.fromUnsignedBigInt(BigInt.fromI32(_approvalFlag)),
        ethereum.Value.fromTuple(_shipInitData),
        ethereum.Value.fromAddress(_shipFactoryAddress),
        ethereum.Value.fromTuple(_reason),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  rootAccount(): Address {
    let result = super.call("rootAccount", "rootAccount():(address)", []);

    return result[0].toAddress();
  }

  try_rootAccount(): ethereum.CallResult<Address> {
    let result = super.tryCall("rootAccount", "rootAccount():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  token(): Address {
    let result = super.call("token", "token():(address)", []);

    return result[0].toAddress();
  }

  try_token(): ethereum.CallResult<Address> {
    let result = super.tryCall("token", "token():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _alloAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AllocateCall extends ethereum.Call {
  get inputs(): AllocateCall__Inputs {
    return new AllocateCall__Inputs(this);
  }

  get outputs(): AllocateCall__Outputs {
    return new AllocateCall__Outputs(this);
  }
}

export class AllocateCall__Inputs {
  _call: AllocateCall;

  constructor(call: AllocateCall) {
    this._call = call;
  }

  get _data(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _sender(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AllocateCall__Outputs {
  _call: AllocateCall;

  constructor(call: AllocateCall) {
    this._call = call;
  }
}

export class CreateRoundCall extends ethereum.Call {
  get inputs(): CreateRoundCall__Inputs {
    return new CreateRoundCall__Inputs(this);
  }

  get outputs(): CreateRoundCall__Outputs {
    return new CreateRoundCall__Outputs(this);
  }
}

export class CreateRoundCall__Inputs {
  _call: CreateRoundCall;

  constructor(call: CreateRoundCall) {
    this._call = call;
  }

  get _totalRoundAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class CreateRoundCall__Outputs {
  _call: CreateRoundCall;

  constructor(call: CreateRoundCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class DistributeCall extends ethereum.Call {
  get inputs(): DistributeCall__Inputs {
    return new DistributeCall__Inputs(this);
  }

  get outputs(): DistributeCall__Outputs {
    return new DistributeCall__Outputs(this);
  }
}

export class DistributeCall__Inputs {
  _call: DistributeCall;

  constructor(call: DistributeCall) {
    this._call = call;
  }

  get _recipientIds(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }

  get _data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _sender(): Address {
    return this._call.inputValues[2].value.toAddress();
  }
}

export class DistributeCall__Outputs {
  _call: DistributeCall;

  constructor(call: DistributeCall) {
    this._call = call;
  }
}

export class IncreasePoolAmountCall extends ethereum.Call {
  get inputs(): IncreasePoolAmountCall__Inputs {
    return new IncreasePoolAmountCall__Inputs(this);
  }

  get outputs(): IncreasePoolAmountCall__Outputs {
    return new IncreasePoolAmountCall__Outputs(this);
  }
}

export class IncreasePoolAmountCall__Inputs {
  _call: IncreasePoolAmountCall;

  constructor(call: IncreasePoolAmountCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class IncreasePoolAmountCall__Outputs {
  _call: IncreasePoolAmountCall;

  constructor(call: IncreasePoolAmountCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _poolId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class PostUpdateCall extends ethereum.Call {
  get inputs(): PostUpdateCall__Inputs {
    return new PostUpdateCall__Inputs(this);
  }

  get outputs(): PostUpdateCall__Outputs {
    return new PostUpdateCall__Outputs(this);
  }
}

export class PostUpdateCall__Inputs {
  _call: PostUpdateCall;

  constructor(call: PostUpdateCall) {
    this._call = call;
  }

  get _tag(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _content(): PostUpdateCall_contentStruct {
    return changetype<PostUpdateCall_contentStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }
}

export class PostUpdateCall__Outputs {
  _call: PostUpdateCall;

  constructor(call: PostUpdateCall) {
    this._call = call;
  }
}

export class PostUpdateCall_contentStruct extends ethereum.Tuple {
  get protocol(): BigInt {
    return this[0].toBigInt();
  }

  get pointer(): string {
    return this[1].toString();
  }
}

export class RegisterRecipientCall extends ethereum.Call {
  get inputs(): RegisterRecipientCall__Inputs {
    return new RegisterRecipientCall__Inputs(this);
  }

  get outputs(): RegisterRecipientCall__Outputs {
    return new RegisterRecipientCall__Outputs(this);
  }
}

export class RegisterRecipientCall__Inputs {
  _call: RegisterRecipientCall;

  constructor(call: RegisterRecipientCall) {
    this._call = call;
  }

  get _data(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _sender(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RegisterRecipientCall__Outputs {
  _call: RegisterRecipientCall;

  constructor(call: RegisterRecipientCall) {
    this._call = call;
  }

  get recipientId(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class ReviewRecipientCall extends ethereum.Call {
  get inputs(): ReviewRecipientCall__Inputs {
    return new ReviewRecipientCall__Inputs(this);
  }

  get outputs(): ReviewRecipientCall__Outputs {
    return new ReviewRecipientCall__Outputs(this);
  }
}

export class ReviewRecipientCall__Inputs {
  _call: ReviewRecipientCall;

  constructor(call: ReviewRecipientCall) {
    this._call = call;
  }

  get _recipientAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _approvalFlag(): i32 {
    return this._call.inputValues[1].value.toI32();
  }

  get _shipInitData(): ReviewRecipientCall_shipInitDataStruct {
    return changetype<ReviewRecipientCall_shipInitDataStruct>(
      this._call.inputValues[2].value.toTuple(),
    );
  }

  get _shipFactoryAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _reason(): ReviewRecipientCall_reasonStruct {
    return changetype<ReviewRecipientCall_reasonStruct>(
      this._call.inputValues[4].value.toTuple(),
    );
  }
}

export class ReviewRecipientCall__Outputs {
  _call: ReviewRecipientCall;

  constructor(call: ReviewRecipientCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class ReviewRecipientCall_shipInitDataStruct extends ethereum.Tuple {
  get registryGating(): boolean {
    return this[0].toBoolean();
  }

  get metadataRequired(): boolean {
    return this[1].toBoolean();
  }

  get grantAmountRequired(): boolean {
    return this[2].toBoolean();
  }

  get shipName(): string {
    return this[3].toString();
  }

  get shipMetadata(): ReviewRecipientCall_shipInitDataShipMetadataStruct {
    return changetype<ReviewRecipientCall_shipInitDataShipMetadataStruct>(
      this[4].toTuple(),
    );
  }

  get recipientId(): Address {
    return this[5].toAddress();
  }

  get operatorHatId(): BigInt {
    return this[6].toBigInt();
  }

  get facilitatorHatId(): BigInt {
    return this[7].toBigInt();
  }
}

export class ReviewRecipientCall_shipInitDataShipMetadataStruct extends ethereum.Tuple {
  get protocol(): BigInt {
    return this[0].toBigInt();
  }

  get pointer(): string {
    return this[1].toString();
  }
}

export class ReviewRecipientCall_reasonStruct extends ethereum.Tuple {
  get protocol(): BigInt {
    return this[0].toBigInt();
  }

  get pointer(): string {
    return this[1].toString();
  }
}

export class SetPoolActiveCall extends ethereum.Call {
  get inputs(): SetPoolActiveCall__Inputs {
    return new SetPoolActiveCall__Inputs(this);
  }

  get outputs(): SetPoolActiveCall__Outputs {
    return new SetPoolActiveCall__Outputs(this);
  }
}

export class SetPoolActiveCall__Inputs {
  _call: SetPoolActiveCall;

  constructor(call: SetPoolActiveCall) {
    this._call = call;
  }

  get _flag(): boolean {
    return this._call.inputValues[0].value.toBoolean();
  }
}

export class SetPoolActiveCall__Outputs {
  _call: SetPoolActiveCall;

  constructor(call: SetPoolActiveCall) {
    this._call = call;
  }
}

export class StartGameCall extends ethereum.Call {
  get inputs(): StartGameCall__Inputs {
    return new StartGameCall__Inputs(this);
  }

  get outputs(): StartGameCall__Outputs {
    return new StartGameCall__Outputs(this);
  }
}

export class StartGameCall__Inputs {
  _call: StartGameCall;

  constructor(call: StartGameCall) {
    this._call = call;
  }
}

export class StartGameCall__Outputs {
  _call: StartGameCall;

  constructor(call: StartGameCall) {
    this._call = call;
  }
}

export class StopGameCall extends ethereum.Call {
  get inputs(): StopGameCall__Inputs {
    return new StopGameCall__Inputs(this);
  }

  get outputs(): StopGameCall__Outputs {
    return new StopGameCall__Outputs(this);
  }
}

export class StopGameCall__Inputs {
  _call: StopGameCall;

  constructor(call: StopGameCall) {
    this._call = call;
  }
}

export class StopGameCall__Outputs {
  _call: StopGameCall;

  constructor(call: StopGameCall) {
    this._call = call;
  }
}

export class WithdrawCall extends ethereum.Call {
  get inputs(): WithdrawCall__Inputs {
    return new WithdrawCall__Inputs(this);
  }

  get outputs(): WithdrawCall__Outputs {
    return new WithdrawCall__Outputs(this);
  }
}

export class WithdrawCall__Inputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawCall__Outputs {
  _call: WithdrawCall;

  constructor(call: WithdrawCall) {
    this._call = call;
  }
}
