// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class ProfileCreated extends ethereum.Event {
  get params(): ProfileCreated__Params {
    return new ProfileCreated__Params(this);
  }
}

export class ProfileCreated__Params {
  _event: ProfileCreated;

  constructor(event: ProfileCreated) {
    this._event = event;
  }

  get profileId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get nonce(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get name(): string {
    return this._event.parameters[2].value.toString();
  }

  get metadata(): ProfileCreatedMetadataStruct {
    return changetype<ProfileCreatedMetadataStruct>(
      this._event.parameters[3].value.toTuple(),
    );
  }

  get owner(): Address {
    return this._event.parameters[4].value.toAddress();
  }

  get anchor(): Address {
    return this._event.parameters[5].value.toAddress();
  }
}

export class ProfileCreatedMetadataStruct extends ethereum.Tuple {
  get protocol(): BigInt {
    return this[0].toBigInt();
  }

  get pointer(): string {
    return this[1].toString();
  }
}

export class ProfileMetadataUpdated extends ethereum.Event {
  get params(): ProfileMetadataUpdated__Params {
    return new ProfileMetadataUpdated__Params(this);
  }
}

export class ProfileMetadataUpdated__Params {
  _event: ProfileMetadataUpdated;

  constructor(event: ProfileMetadataUpdated) {
    this._event = event;
  }

  get profileId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get metadata(): ProfileMetadataUpdatedMetadataStruct {
    return changetype<ProfileMetadataUpdatedMetadataStruct>(
      this._event.parameters[1].value.toTuple(),
    );
  }
}

export class ProfileMetadataUpdatedMetadataStruct extends ethereum.Tuple {
  get protocol(): BigInt {
    return this[0].toBigInt();
  }

  get pointer(): string {
    return this[1].toString();
  }
}

export class ProfileNameUpdated extends ethereum.Event {
  get params(): ProfileNameUpdated__Params {
    return new ProfileNameUpdated__Params(this);
  }
}

export class ProfileNameUpdated__Params {
  _event: ProfileNameUpdated;

  constructor(event: ProfileNameUpdated) {
    this._event = event;
  }

  get profileId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get anchor(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class ProfileOwnerUpdated extends ethereum.Event {
  get params(): ProfileOwnerUpdated__Params {
    return new ProfileOwnerUpdated__Params(this);
  }
}

export class ProfileOwnerUpdated__Params {
  _event: ProfileOwnerUpdated;

  constructor(event: ProfileOwnerUpdated) {
    this._event = event;
  }

  get profileId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class ProfilePendingOwnerUpdated extends ethereum.Event {
  get params(): ProfilePendingOwnerUpdated__Params {
    return new ProfilePendingOwnerUpdated__Params(this);
  }
}

export class ProfilePendingOwnerUpdated__Params {
  _event: ProfilePendingOwnerUpdated;

  constructor(event: ProfilePendingOwnerUpdated) {
    this._event = event;
  }

  get profileId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get pendingOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class Registry__createProfileInput_metadataStruct extends ethereum.Tuple {
  get protocol(): BigInt {
    return this[0].toBigInt();
  }

  get pointer(): string {
    return this[1].toString();
  }
}

export class Registry__getProfileByAnchorResultValue0Struct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get nonce(): BigInt {
    return this[1].toBigInt();
  }

  get name(): string {
    return this[2].toString();
  }

  get metadata(): Registry__getProfileByAnchorResultValue0MetadataStruct {
    return changetype<Registry__getProfileByAnchorResultValue0MetadataStruct>(
      this[3].toTuple(),
    );
  }

  get owner(): Address {
    return this[4].toAddress();
  }

  get anchor(): Address {
    return this[5].toAddress();
  }
}

export class Registry__getProfileByAnchorResultValue0MetadataStruct extends ethereum.Tuple {
  get protocol(): BigInt {
    return this[0].toBigInt();
  }

  get pointer(): string {
    return this[1].toString();
  }
}

export class Registry__getProfileByIdResultValue0Struct extends ethereum.Tuple {
  get id(): Bytes {
    return this[0].toBytes();
  }

  get nonce(): BigInt {
    return this[1].toBigInt();
  }

  get name(): string {
    return this[2].toString();
  }

  get metadata(): Registry__getProfileByIdResultValue0MetadataStruct {
    return changetype<Registry__getProfileByIdResultValue0MetadataStruct>(
      this[3].toTuple(),
    );
  }

  get owner(): Address {
    return this[4].toAddress();
  }

  get anchor(): Address {
    return this[5].toAddress();
  }
}

export class Registry__getProfileByIdResultValue0MetadataStruct extends ethereum.Tuple {
  get protocol(): BigInt {
    return this[0].toBigInt();
  }

  get pointer(): string {
    return this[1].toString();
  }
}

export class Registry__profilesByIdResultMetadataStruct extends ethereum.Tuple {
  get protocol(): BigInt {
    return this[0].toBigInt();
  }

  get pointer(): string {
    return this[1].toString();
  }
}

export class Registry__profilesByIdResult {
  value0: Bytes;
  value1: BigInt;
  value2: string;
  value3: Registry__profilesByIdResultMetadataStruct;
  value4: Address;
  value5: Address;

  constructor(
    value0: Bytes,
    value1: BigInt,
    value2: string,
    value3: Registry__profilesByIdResultMetadataStruct,
    value4: Address,
    value5: Address,
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromFixedBytes(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromTuple(this.value3));
    map.set("value4", ethereum.Value.fromAddress(this.value4));
    map.set("value5", ethereum.Value.fromAddress(this.value5));
    return map;
  }

  getId(): Bytes {
    return this.value0;
  }

  getNonce(): BigInt {
    return this.value1;
  }

  getName(): string {
    return this.value2;
  }

  getMetadata(): Registry__profilesByIdResultMetadataStruct {
    return this.value3;
  }

  getOwner(): Address {
    return this.value4;
  }

  getAnchor(): Address {
    return this.value5;
  }
}

export class Registry extends ethereum.SmartContract {
  static bind(address: Address): Registry {
    return new Registry("Registry", address);
  }

  ALLO_OWNER(): Bytes {
    let result = super.call("ALLO_OWNER", "ALLO_OWNER():(bytes32)", []);

    return result[0].toBytes();
  }

  try_ALLO_OWNER(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("ALLO_OWNER", "ALLO_OWNER():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  NATIVE(): Address {
    let result = super.call("NATIVE", "NATIVE():(address)", []);

    return result[0].toAddress();
  }

  try_NATIVE(): ethereum.CallResult<Address> {
    let result = super.tryCall("NATIVE", "NATIVE():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  anchorToProfileId(param0: Address): Bytes {
    let result = super.call(
      "anchorToProfileId",
      "anchorToProfileId(address):(bytes32)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBytes();
  }

  try_anchorToProfileId(param0: Address): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "anchorToProfileId",
      "anchorToProfileId(address):(bytes32)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  createProfile(
    _nonce: BigInt,
    _name: string,
    _metadata: Registry__createProfileInput_metadataStruct,
    _owner: Address,
    _members: Array<Address>,
  ): Bytes {
    let result = super.call(
      "createProfile",
      "createProfile(uint256,string,(uint256,string),address,address[]):(bytes32)",
      [
        ethereum.Value.fromUnsignedBigInt(_nonce),
        ethereum.Value.fromString(_name),
        ethereum.Value.fromTuple(_metadata),
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddressArray(_members),
      ],
    );

    return result[0].toBytes();
  }

  try_createProfile(
    _nonce: BigInt,
    _name: string,
    _metadata: Registry__createProfileInput_metadataStruct,
    _owner: Address,
    _members: Array<Address>,
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "createProfile",
      "createProfile(uint256,string,(uint256,string),address,address[]):(bytes32)",
      [
        ethereum.Value.fromUnsignedBigInt(_nonce),
        ethereum.Value.fromString(_name),
        ethereum.Value.fromTuple(_metadata),
        ethereum.Value.fromAddress(_owner),
        ethereum.Value.fromAddressArray(_members),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getProfileByAnchor(
    _anchor: Address,
  ): Registry__getProfileByAnchorResultValue0Struct {
    let result = super.call(
      "getProfileByAnchor",
      "getProfileByAnchor(address):((bytes32,uint256,string,(uint256,string),address,address))",
      [ethereum.Value.fromAddress(_anchor)],
    );

    return changetype<Registry__getProfileByAnchorResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getProfileByAnchor(
    _anchor: Address,
  ): ethereum.CallResult<Registry__getProfileByAnchorResultValue0Struct> {
    let result = super.tryCall(
      "getProfileByAnchor",
      "getProfileByAnchor(address):((bytes32,uint256,string,(uint256,string),address,address))",
      [ethereum.Value.fromAddress(_anchor)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Registry__getProfileByAnchorResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  getProfileById(
    _profileId: Bytes,
  ): Registry__getProfileByIdResultValue0Struct {
    let result = super.call(
      "getProfileById",
      "getProfileById(bytes32):((bytes32,uint256,string,(uint256,string),address,address))",
      [ethereum.Value.fromFixedBytes(_profileId)],
    );

    return changetype<Registry__getProfileByIdResultValue0Struct>(
      result[0].toTuple(),
    );
  }

  try_getProfileById(
    _profileId: Bytes,
  ): ethereum.CallResult<Registry__getProfileByIdResultValue0Struct> {
    let result = super.tryCall(
      "getProfileById",
      "getProfileById(bytes32):((bytes32,uint256,string,(uint256,string),address,address))",
      [ethereum.Value.fromFixedBytes(_profileId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Registry__getProfileByIdResultValue0Struct>(
        value[0].toTuple(),
      ),
    );
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role),
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isMemberOfProfile(_profileId: Bytes, _member: Address): boolean {
    let result = super.call(
      "isMemberOfProfile",
      "isMemberOfProfile(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(_profileId),
        ethereum.Value.fromAddress(_member),
      ],
    );

    return result[0].toBoolean();
  }

  try_isMemberOfProfile(
    _profileId: Bytes,
    _member: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isMemberOfProfile",
      "isMemberOfProfile(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(_profileId),
        ethereum.Value.fromAddress(_member),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isOwnerOfProfile(_profileId: Bytes, _owner: Address): boolean {
    let result = super.call(
      "isOwnerOfProfile",
      "isOwnerOfProfile(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(_profileId),
        ethereum.Value.fromAddress(_owner),
      ],
    );

    return result[0].toBoolean();
  }

  try_isOwnerOfProfile(
    _profileId: Bytes,
    _owner: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isOwnerOfProfile",
      "isOwnerOfProfile(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(_profileId),
        ethereum.Value.fromAddress(_owner),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isOwnerOrMemberOfProfile(_profileId: Bytes, _account: Address): boolean {
    let result = super.call(
      "isOwnerOrMemberOfProfile",
      "isOwnerOrMemberOfProfile(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(_profileId),
        ethereum.Value.fromAddress(_account),
      ],
    );

    return result[0].toBoolean();
  }

  try_isOwnerOrMemberOfProfile(
    _profileId: Bytes,
    _account: Address,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isOwnerOrMemberOfProfile",
      "isOwnerOrMemberOfProfile(bytes32,address):(bool)",
      [
        ethereum.Value.fromFixedBytes(_profileId),
        ethereum.Value.fromAddress(_account),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  profileIdToPendingOwner(param0: Bytes): Address {
    let result = super.call(
      "profileIdToPendingOwner",
      "profileIdToPendingOwner(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(param0)],
    );

    return result[0].toAddress();
  }

  try_profileIdToPendingOwner(param0: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "profileIdToPendingOwner",
      "profileIdToPendingOwner(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  profilesById(param0: Bytes): Registry__profilesByIdResult {
    let result = super.call(
      "profilesById",
      "profilesById(bytes32):(bytes32,uint256,string,(uint256,string),address,address)",
      [ethereum.Value.fromFixedBytes(param0)],
    );

    return new Registry__profilesByIdResult(
      result[0].toBytes(),
      result[1].toBigInt(),
      result[2].toString(),
      changetype<Registry__profilesByIdResultMetadataStruct>(
        result[3].toTuple(),
      ),
      result[4].toAddress(),
      result[5].toAddress(),
    );
  }

  try_profilesById(
    param0: Bytes,
  ): ethereum.CallResult<Registry__profilesByIdResult> {
    let result = super.tryCall(
      "profilesById",
      "profilesById(bytes32):(bytes32,uint256,string,(uint256,string),address,address)",
      [ethereum.Value.fromFixedBytes(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Registry__profilesByIdResult(
        value[0].toBytes(),
        value[1].toBigInt(),
        value[2].toString(),
        changetype<Registry__profilesByIdResultMetadataStruct>(
          value[3].toTuple(),
        ),
        value[4].toAddress(),
        value[5].toAddress(),
      ),
    );
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  updateProfileName(_profileId: Bytes, _name: string): Address {
    let result = super.call(
      "updateProfileName",
      "updateProfileName(bytes32,string):(address)",
      [
        ethereum.Value.fromFixedBytes(_profileId),
        ethereum.Value.fromString(_name),
      ],
    );

    return result[0].toAddress();
  }

  try_updateProfileName(
    _profileId: Bytes,
    _name: string,
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "updateProfileName",
      "updateProfileName(bytes32,string):(address)",
      [
        ethereum.Value.fromFixedBytes(_profileId),
        ethereum.Value.fromString(_name),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class AcceptProfileOwnershipCall extends ethereum.Call {
  get inputs(): AcceptProfileOwnershipCall__Inputs {
    return new AcceptProfileOwnershipCall__Inputs(this);
  }

  get outputs(): AcceptProfileOwnershipCall__Outputs {
    return new AcceptProfileOwnershipCall__Outputs(this);
  }
}

export class AcceptProfileOwnershipCall__Inputs {
  _call: AcceptProfileOwnershipCall;

  constructor(call: AcceptProfileOwnershipCall) {
    this._call = call;
  }

  get _profileId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class AcceptProfileOwnershipCall__Outputs {
  _call: AcceptProfileOwnershipCall;

  constructor(call: AcceptProfileOwnershipCall) {
    this._call = call;
  }
}

export class AddMembersCall extends ethereum.Call {
  get inputs(): AddMembersCall__Inputs {
    return new AddMembersCall__Inputs(this);
  }

  get outputs(): AddMembersCall__Outputs {
    return new AddMembersCall__Outputs(this);
  }
}

export class AddMembersCall__Inputs {
  _call: AddMembersCall;

  constructor(call: AddMembersCall) {
    this._call = call;
  }

  get _profileId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _members(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class AddMembersCall__Outputs {
  _call: AddMembersCall;

  constructor(call: AddMembersCall) {
    this._call = call;
  }
}

export class CreateProfileCall extends ethereum.Call {
  get inputs(): CreateProfileCall__Inputs {
    return new CreateProfileCall__Inputs(this);
  }

  get outputs(): CreateProfileCall__Outputs {
    return new CreateProfileCall__Outputs(this);
  }
}

export class CreateProfileCall__Inputs {
  _call: CreateProfileCall;

  constructor(call: CreateProfileCall) {
    this._call = call;
  }

  get _nonce(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _metadata(): CreateProfileCall_metadataStruct {
    return changetype<CreateProfileCall_metadataStruct>(
      this._call.inputValues[2].value.toTuple(),
    );
  }

  get _owner(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _members(): Array<Address> {
    return this._call.inputValues[4].value.toAddressArray();
  }
}

export class CreateProfileCall__Outputs {
  _call: CreateProfileCall;

  constructor(call: CreateProfileCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class CreateProfileCall_metadataStruct extends ethereum.Tuple {
  get protocol(): BigInt {
    return this[0].toBigInt();
  }

  get pointer(): string {
    return this[1].toString();
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RecoverFundsCall extends ethereum.Call {
  get inputs(): RecoverFundsCall__Inputs {
    return new RecoverFundsCall__Inputs(this);
  }

  get outputs(): RecoverFundsCall__Outputs {
    return new RecoverFundsCall__Outputs(this);
  }
}

export class RecoverFundsCall__Inputs {
  _call: RecoverFundsCall;

  constructor(call: RecoverFundsCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _recipient(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RecoverFundsCall__Outputs {
  _call: RecoverFundsCall;

  constructor(call: RecoverFundsCall) {
    this._call = call;
  }
}

export class RemoveMembersCall extends ethereum.Call {
  get inputs(): RemoveMembersCall__Inputs {
    return new RemoveMembersCall__Inputs(this);
  }

  get outputs(): RemoveMembersCall__Outputs {
    return new RemoveMembersCall__Outputs(this);
  }
}

export class RemoveMembersCall__Inputs {
  _call: RemoveMembersCall;

  constructor(call: RemoveMembersCall) {
    this._call = call;
  }

  get _profileId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _members(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class RemoveMembersCall__Outputs {
  _call: RemoveMembersCall;

  constructor(call: RemoveMembersCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class UpdateProfileMetadataCall extends ethereum.Call {
  get inputs(): UpdateProfileMetadataCall__Inputs {
    return new UpdateProfileMetadataCall__Inputs(this);
  }

  get outputs(): UpdateProfileMetadataCall__Outputs {
    return new UpdateProfileMetadataCall__Outputs(this);
  }
}

export class UpdateProfileMetadataCall__Inputs {
  _call: UpdateProfileMetadataCall;

  constructor(call: UpdateProfileMetadataCall) {
    this._call = call;
  }

  get _profileId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _metadata(): UpdateProfileMetadataCall_metadataStruct {
    return changetype<UpdateProfileMetadataCall_metadataStruct>(
      this._call.inputValues[1].value.toTuple(),
    );
  }
}

export class UpdateProfileMetadataCall__Outputs {
  _call: UpdateProfileMetadataCall;

  constructor(call: UpdateProfileMetadataCall) {
    this._call = call;
  }
}

export class UpdateProfileMetadataCall_metadataStruct extends ethereum.Tuple {
  get protocol(): BigInt {
    return this[0].toBigInt();
  }

  get pointer(): string {
    return this[1].toString();
  }
}

export class UpdateProfileNameCall extends ethereum.Call {
  get inputs(): UpdateProfileNameCall__Inputs {
    return new UpdateProfileNameCall__Inputs(this);
  }

  get outputs(): UpdateProfileNameCall__Outputs {
    return new UpdateProfileNameCall__Outputs(this);
  }
}

export class UpdateProfileNameCall__Inputs {
  _call: UpdateProfileNameCall;

  constructor(call: UpdateProfileNameCall) {
    this._call = call;
  }

  get _profileId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateProfileNameCall__Outputs {
  _call: UpdateProfileNameCall;

  constructor(call: UpdateProfileNameCall) {
    this._call = call;
  }

  get anchor(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class UpdateProfilePendingOwnerCall extends ethereum.Call {
  get inputs(): UpdateProfilePendingOwnerCall__Inputs {
    return new UpdateProfilePendingOwnerCall__Inputs(this);
  }

  get outputs(): UpdateProfilePendingOwnerCall__Outputs {
    return new UpdateProfilePendingOwnerCall__Outputs(this);
  }
}

export class UpdateProfilePendingOwnerCall__Inputs {
  _call: UpdateProfilePendingOwnerCall;

  constructor(call: UpdateProfilePendingOwnerCall) {
    this._call = call;
  }

  get _profileId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _pendingOwner(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class UpdateProfilePendingOwnerCall__Outputs {
  _call: UpdateProfilePendingOwnerCall;

  constructor(call: UpdateProfilePendingOwnerCall) {
    this._call = call;
  }
}
